#!/usr/bin/python -W ignore::DeprecationWarning
# -*- coding: utf-8 -*-
#
# archipel-centralagentnode.py
#
# Copyright (C) 2010 Antoine Mercadal <antoine.mercadal@inframonde.eu>
# This file is part of ArchipelProject
# http://archipelproject.org
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import argparse
import os
import sys
import archipelcore.pubsub
from archipelcore import xmpp
from archipelcore.scriptutils import *

NODENAME_CENTRAL_KEEPALIVE = "/archipel/centralagentkeepalive"

def create(xmppclient, pubsubserver):
    """
    Create the pubsub node
    """
    config = {
            archipelcore.pubsub.XMPP_PUBSUB_VAR_ACCESS_MODEL: archipelcore.pubsub.XMPP_PUBSUB_VAR_ACCESS_MODEL_OPEN,
            archipelcore.pubsub.XMPP_PUBSUB_VAR_PUBLISH_MODEL: archipelcore.pubsub.XMPP_PUBSUB_VAR_ACCESS_MODEL_OPEN,
            archipelcore.pubsub.XMPP_PUBSUB_VAR_DELIVER_NOTIFICATION: 1,
            archipelcore.pubsub.XMPP_PUBSUB_VAR_MAX_ITEMS: 100,
            archipelcore.pubsub.XMPP_PUBSUB_VAR_PERSIST_ITEMS: 0,
            archipelcore.pubsub.XMPP_PUBSUB_VAR_NOTIFY_RECTRACT: 1,
            archipelcore.pubsub.XMPP_PUBSUB_VAR_DELIVER_PAYLOADS: 1,
            archipelcore.pubsub.XMPP_PUBSUB_VAR_SEND_LAST_PUBLISHED_ITEM: archipelcore.pubsub.XMPP_PUBSUB_VAR_SEND_LAST_PUBLISHED_ITEM_NEVER
    }
    create_pubsub(xmppclient, pubsubserver, NODENAME_CENTRAL_KEEPALIVE, config)


def delete(xmppclient, pubsubserver):
    """
    Delete the pubsub node
    """
    delete_pubsub(xmppclient, pubsubserver, NODENAME_CENTRAL_KEEPALIVE)


def list(xmppclient, pubsubserver):
    """
    list the content
    """
    pubsubNode = get_pubsub(xmppclient, pubsubserver, NODENAME_CENTRAL_KEEPALIVE)
    for item in pubsubNode.get_items():
        print item

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-j", "--jid",
                        dest="jid",
                        help="set the JID to use",
                        metavar="user@domain")
    parser.add_argument("-p", "--password",
                        dest="password",
                        help="set the password associated to the JID",
                        metavar="123456")
    parser.add_argument("-P", "--pubsubserver",
                        dest="pubsubserver",
                        help="set the pubsubserver to use. if not given it will be pubsub.[jid.getDomain()]",
                        metavar="pubsub.domain",
                        default=None)
    parser.add_argument("-c", "--create",
                        action="store_true",
                        dest="create",
                        help="create the node")
    parser.add_argument("-d", "--delete",
                        action="store_true",
                        dest="delete",
                        help="delete the node")
    parser.add_argument("-l", "--list",
                        action="store_true",
                        dest="list",
                        help="list the content")

    options = parser.parse_args()

    xmppclient = initialize(options)

    if options.create:
        create(xmppclient, options.pubsubserver)
    elif options.delete:
        delete(xmppclient, options.pubsubserver)
    elif options.list:
        list(xmppclient, options.pubsubserver)
