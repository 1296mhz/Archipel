#!/usr/bin/python 
# update_xmpp_domain.py
# 
# Copyright (C) 2010 Antoine Mercadal <antoine.mercadal@inframonde.eu>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import os
os.chdir(os.path.realpath(os.path.dirname(__file__)))


import sqlite3, sys, getopt, datetime, random, string, commands

HELP = """\
arch-importvirtualmachine (c) 2010 Antoine Mercadal
this tool allows to import already existing libvirt virtual machine into Archipel.
Be sure to stop archipelServer before running this tool

usage :
    arch-importvirtualmachine --file=sqlite3DB --uuid=aUUID --xmppserver=aServer --name=aName [--password=aPassword]
    
    --file          : the sqlite3 file of hypervisor
    --uuid          : the UUID of the exting libvirt machine
    --xmppserver    : the current Archipel's XMPP server
    --name          : the name you want to use for this virtual machine
    --password      : OPTIONAL, the password the VM should use to connect to XMPP server. Generated if ommitted
    --help, -h      : shows this message

"""

def insert(dbfile, uuid, xmppserver, name, password):
    db = sqlite3.connect(dbfile)
    jid = "%s@%s" % (uuid, xmppserver)
    
    c = db.cursor()
    c.execute("INSERT INTO virtualmachines (jid, password, name, creation_date, comment) VALUES (?, ?, ?, ?, ?)", (jid, password, name, datetime.datetime.now(), "user-imported virtual machine"))
    db.commit()
    c.close()
    db.close()
    print "\033[32mSUCCESS: Virtual machine %s has been inserted with JID %s\033[0m" % (name, jid)
    
    
if __name__ == "__main__":
    name = None
    xmppserver = None
    uuid = None
    dbfile = None
    password = ''.join([random.choice(string.letters + string.digits) for i in range(32)])
    try:
        opts, args = getopt.getopt(sys.argv[1:], "h", ["file=", "name=", "uuid=", "xmppserver=", "password=", "help"])
    
        for o, a in opts:
            if o in ("--file"): dbfile = a
            if o in ("--name"): name = a
            if o in ("--uuid"): uuid = a
            if o in ("--xmppserver"): xmppserver = a
            if o in ("--password"): password = a
            if o in ("-h", "--help"):
                print HELP
                sys.exit(0)
    except Exception as ex:
        print "\033[31mERROR: %s \033[0m\n" % str(ex)
        sys.exit(1)
    
    if len(commands.getoutput("ps -ef | grep runarchipel.py | grep -v grep")) > 0:
        print "\033[31mERROR: Archipel is running. please stop it before running this script\n\033[0m"
        sys.exit(1)
    
    if not dbfile or not uuid or not xmppserver or not name :
        print HELP
        sys.exit(1)
    
    #insert(dbfile, uuid, xmppserver, name, password)
    