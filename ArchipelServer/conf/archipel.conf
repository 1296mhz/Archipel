# 
# archipel.conf
# 
# Copyright (C) 2010 Antoine Mercadal <antoine.mercadal@inframonde.eu>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.



#
# This is the main configuration parameters
#
[GLOBAL]

# the folder were archipel besides
general_exec_dir            = /opt/archipel

# the name of the folder where belong modules uses in python import
modules_dir_name            = modules

#the fileststem path of modules_dir_name
modules_dir_base_path       = %(general_exec_dir)s/modules

# if set to True, all modules that beside into modules_dir_name are loaded
general_auto_load_module    = False

# the ip of this machine. Can be set to "auto"
machine_ip                  = auto

# if set to True, XMPP layer uses avatars
use_avatar                  = True

# Folder of the avatars
machine_avatar_directory    = %(general_exec_dir)s/avatars


#
# webserver configuration
#
[WEBSERVER]

# the port to listen
webserver_port              = 8088



#
# This allows to choose wich modules to load.
# the name of the parameter is the name the module dir.
# If the value is set to True, the module will be loaded
#
[MODULES]

hypervisor_health           = True
hypervisor_network          = True
vm_media_management         = True
geolocalization             = True
vmcasting                   = True
snapshoting                 = True



#
# The hypervisor configuration
#
[HYPERVISOR]

# the uri of hypervisor 
hypervisor_uri              = qemu:///system

# the JID of this hypervisor. 
# If this account not exists, it will be created on the fly
hypervisor_xmpp_jid         = hypervisor@virt-hyperviseur

# the XMPP password of this hypervisor
hypervisor_xmpp_password    = password

# the sqlite3 db file to store hypervirso informations
hypervisor_database_path    = /opt/archipel/databases/hypervisor.sqlite3

# the default avatar to use for hypervisor, relative to 
# GLOBAL:machine_avatar_directory and if GLOBAL:use_avatar is set to True
hypervisor_default_avatar   = defaulthypervisor.png



#
# The virtual machines configuration
#
[VIRTUALMACHINE]

# the base folder to use to store virtual machine's own 
# informations (drives, etc...)
vm_base_path                = /vm/drives

# the default avatar to use for virtual machine, relative to 
# GLOBAL:machine_avatar_directory and if GLOBAL:use_avatar is set to True
vm_default_avatar           = defaultvm.png

# the size of the random generated XMPP password
xmpp_password_size          = 32



#
# Logging configuration
#
[LOGGING]

# log level : debug, info, warning, error, critical
logging_level               = debug

# the path of file to store logs
logging_file_path           = /var/log/archipel/archipel.log

# max size in bytes of a log file before rotation
logging_max_bytes           = 5000000

# number of log backup file to keep
logging_backup_count        = 5

# the date format to use in log file
logging_date_format         = %a, %d %b %Y %H:%M:%S

# the logging formatters. you can find the different tokens at
# http://docs.python.org/library/log.html#formatter
logging_formatter           = %(levelname)s::%(asctime)s::%(filename)s:%(lineno)s::%(module)s.%(funcName)s::%(message)s



###############################################################################
#                        MODULE PRIVATE CONFIGURATION                         #
###############################################################################


#
# HypervisorHealth module configuration
#
[HEALTH]

# the sqlite3 db file to store health informations
health_database_path        = /opt/archipel/databases/statscollection.sqlite3

# data collection interval in seconds
health_collection_interval  = 5

# max datarow to store in number of data collection 
# (5s * 50000collections ~ 70 hours)
max_rows_before_purge       = 50000

# not used
# health_snmp_agent           = anonymous

# not used
# health_snmp_community       = public

# not used
# health_snmp_version         = 1

# not used
# health_snmp_port            = 161



#
# Medias module configuration
#
[MEDIAS]

# the filesystem path to the shared ISO file usable 
# by virtual machines
iso_base_path               = /vm/iso



#
# Geolocalization module configuration
#
[GEOLOCALIZATION]

# the url of geolocalization service 
service_url                 = ipinfodb.com

# the query of geolocalization service 
service_request             = /ip_query.php

# the HTTP method of geolocalization service 
service_method              = GET

# the base XML tag of geolocalization service 
# must contains <latitude> and <longitude> tags
service_response_root_node  = Response



#
# VMCasting module configuration
#
[VMCASTING]

# the sqlite3 db file to store vmcatsting informations
vmcasting_database_path     = /opt/archipel/databases/vmcasting.sqlite3

# the folder where downloaded appliances are placed
repository_path             = /vm/repo

# working path
temp_path                   = /vm/tmp

# the name of vmcast
own_vmcast_name             = Local vmcasts

# vmcast description
own_vmcast_description      = This is the own vmcast feed of the hypervisor

# hypervisor VMCast UUID (must be unique for entire plateform)
own_vmcast_uuid             = a933cf21-d64a-3f9b-929e-449ac88fc353

# the url to access the vmcast
own_vmcast_url              = http://127.0.0.1:8088/vmcasts/

# the file to GET
own_vmcast_file_name        = rss.xml

# the langage of vmcast
own_vmcast_lang             = en-us

# file system folder of vmcast
own_vmcast_path             = /opt/www/vmcasts/

# interval in second to refresh the content of the cast
own_vmcast_refresh_interval = 60

# supported disk extensions, separated by ";" containing the "."
# for example .qcow;.qcow2
disks_extensions            = .qcow2;.qcow;.img;.iso
